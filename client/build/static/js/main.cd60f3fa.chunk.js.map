{"version":3,"sources":["reducer/covidReducer.js","reducer/index.js","store/storeConfig.js","actions/covidAction.js","components/DropdownComponent.js","components/PictorialChartComponent.js","components/CardComponent.js","components/MainNavbar.js","components/shared/Loader.js","components/Dashboard.js","serviceWorker.js","index.js"],"names":["initialState","loading","combineReducers","covidReducer","state","arguments","length","undefined","action","type","Object","objectSpread2","covidcountries","payload","coviddata","middleware","applyMiddleware","thunk","createStore","reducer","startLoader","dispatch","a","stopLoader","fetchCovidCountries","requestObj","method","url","API_ENDPOINT","axios","then","res","data","covid_countries","catch","err","err_msg","response","statusText","message","console","log","fetchCovidData","cntry","country_id","Dashboard","props","_this","classCallCheck","this","_super","call","changeCountryFilter","e","setState","selected_country","target","value","react_default","createElement","className","Select","onChange","placeholder","inputProps","name","id","MenuItem","key","covidPanel","map","country","_id","country_name","Component","mapDispatchToProps","withRouter","connect","totalcovidcases","confirmed_cases","death_cases","toFixed","style","marginTop","es6","width","height","dataKey","yAxisId","orientation","stroke","barSize","fill","DropdownComponent","PictorialChartComponent","MainNavbar","CardComponent","Loader","_p","components_MainNavbar","Boolean","window","location","hostname","match","ReactDOM","render","es","store","react_router_dom","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.cd60f3fa.chunk.js","sourcesContent":["const initialState = {\n    loading : false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n\n        case 'START_LOADER' : {\n            return {...state,\n                loading : true\n            }\n        }\n        \n        case 'STOP_LOADER' : {\n            return {...state,\n                loading : false\n            }\n        }\n\n        case 'FETCH_COVID_COUNTRIES' : {\n            return {...state,\n                covidcountries : action.payload.covidcountries\n            }\n        }\n\n        case 'FETCH_COVID_DATA' : {\n            return {...state,\n                coviddata : action.payload.coviddata\n            }\n        }\n     \n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport covidReducer from './covidReducer';\n\nexport default combineReducers({\n    covidReducer\n})","import { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"../reducer\";\n\nconst middleware = applyMiddleware(thunk)\n\nexport default createStore(reducer, middleware)","import axios from \"axios\";\nimport {API_ENDPOINT} from '../constants';\n\n\nconst startLoader = (dispatch,a)=>{\n    return dispatch({ type: \"START_LOADER\" });\n}\n  \nconst stopLoader = (dispatch)=>{\n    return dispatch({ type: \"STOP_LOADER\" });\n}\n\nexport const fetchCovidCountries = () => dispatch => {\n  var requestObj = {\n    method: 'POST',\n    url: API_ENDPOINT + '/covidreport/gt_cvd_cntry',\n  };\n  startLoader(dispatch,1);\n  \n  axios(requestObj).then((res) => {\n    stopLoader(dispatch);\n    if (res ) {\n      dispatch({\n        type: \"FETCH_COVID_COUNTRIES\",\n        payload: {\n            covidcountries : res.data.data.covid_countries\n        }\n      });\n    }\n  })\n    .catch((err) => {\n      var err_msg = \"Something went wrong\";\n      if (err.response && err.response.statusText) {\n        err_msg = err.response.statusText;\n      }\n      if(err.response && err.response.data && err.response.data.message){\n        err_msg = err.response.data.message;\n      }\n      \n      stopLoader(dispatch);\n      console.log(err_msg);\n    })\n}\n\nexport const fetchCovidData = (data) => dispatch => {\n  \n    var requestObj = {\n      method: 'POST',\n      data: {\n        cntry : data.country_id\n      },\n      url: API_ENDPOINT + '/covidreport/gt_cvd_data',\n    };\n    startLoader(dispatch,1);\n    \n    axios(requestObj).then((res) => {\n      stopLoader(dispatch);\n      if (res ) {\n        dispatch({\n          type: \"FETCH_COVID_DATA\",\n          payload: {\n              coviddata : res.data.data\n          }\n      });\n      }\n    })\n      .catch((err) => {\n        var err_msg = \"Something went wrong\";\n        if (err.response && err.response.statusText) {\n          err_msg = err.response.statusText;\n        }\n        if(err.response && err.response.data && err.response.data.message){\n          err_msg = err.response.data.message;\n        }\n       \n        stopLoader(dispatch);\n        console.log(err_msg);\n      })\n  }\n  ","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem'\nimport {fetchCovidCountries,fetchCovidData} from '../actions/covidAction'\n\nclass Dashboard extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        selected_country : 'None'\n    }\n  }\n\n  componentDidMount(){\n    this.props.fetchCovidCountries();\n  }\n\n  changeCountryFilter = (e) =>{\n      this.setState({\n        selected_country : e.target.value\n      })\n      if(e.target.value != 'None'){\n        this.props.fetchCovidData({country_id : e.target.value});\n      }\n  } \n\n  render(){\n      console.log(this.props);\n    return (\n      <div className=\"row no-margin no-padding\">\n        <div className=\"col-lg-5 col-sm-5 no-margin no-padding center-all\" >\n            <div className=\"dropdown-label\">Country:</div>\n            <Select className=\"country-dropdown\"\n                value={this.state.selected_country}\n                onChange={this.changeCountryFilter} \n                placeholder=\"None\"\n                inputProps={{\n                    name: 'country_name',\n                    id: 'country_name',\n                }}\n                > \n                <MenuItem value={'None'} key={'None'}>None</MenuItem>\n                 {!this.props.covidPanel || (!this.props.covidPanel.covidcountries ) ? null \n                    : this.props.covidPanel.covidcountries.map(country =>{\n                        return (\n                            <MenuItem value={country._id} key={country._id}>{country.country_name}</MenuItem>\n                        );\n                 })}\n            </Select>   \n        </div> \n       \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n      covidPanel : state.covidReducer\n  }\n}\n\nconst mapDispatchToProps = {fetchCovidCountries,fetchCovidData};\n\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Dashboard));","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport {fetchCovidCountries,fetchCovidData} from '../actions/covidAction';\nimport {Bar, ComposedChart,Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\nclass Dashboard extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n     \n    }\n  }\n\n  render(){\n      console.log(this.props);\n      if(this.props.covidPanel.coviddata && this.props.covidPanel.coviddata.totalcovidcases){\n        return (\n            <div>\n                <div className=\"row no-margin no-padding\">\n                    <div className=\"col-sm-4  no-padding text-align-center card-info-section\">\n                        {this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].confirmed_cases ? this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].confirmed_cases : 0}\n                        <div className=\"card-info-title\">Confirmed</div>\n                    </div>\n                    <div className=\"col-sm-4  no-padding text-align-center card-info-section\">\n                        {(this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].confirmed_cases && this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-2].confirmed_cases )? (this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].confirmed_cases - this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-2].confirmed_cases ): (this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].confirmed_cases ? this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].confirmed_cases : 0)}\n                        <div  className=\"card-info-title\">New Confirmed</div>\n                    </div>\n                    <div className=\"col-sm-4  no-padding text-align-center card-info-section\">\n                        {this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].death_cases ? this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].death_cases : 0}\n                        <div  className=\"card-info-title\">Deaths</div>\n                    </div>\n                    <div className=\"col-sm-4  no-padding text-align-center card-info-section\">\n                        {(this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].confirmed_cases && this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-2].confirmed_cases )? ( (( ( this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].confirmed_cases - this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-2].confirmed_cases )/this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].confirmed_cases)* 100).toFixed(2)) + '%':0 + '%'}\n                        <div  className=\"card-info-title\">New Confirmed Growth Rate</div>\n                    </div>\n                    <div className=\"col-sm-4  no-padding text-align-center card-info-section\">\n                        { (this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].confirmed_cases && this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].death_cases ) ? (( (this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].death_cases / this.props.covidPanel.coviddata.totalcovidcases[this.props.covidPanel.coviddata.totalcovidcases.length-1].confirmed_cases )*100).toFixed(2))+ '%' : 0 + '%'}\n                        <div  className=\"card-info-title\">Mortality Rate</div>\n                    </div>\n                </div>\n                <div style={{marginTop:40}}>\n                    <ComposedChart width={1000} height={250} data={this.props.covidPanel.coviddata.totalcovidcases}>\n                    <XAxis dataKey=\"c_date\" />\n                    <YAxis yAxisId=\"left\" />\n                    <YAxis yAxisId=\"right\" orientation=\"right\" />\n        \n                    <Tooltip />\n                    <Legend />\n                    <CartesianGrid stroke=\"#f5f5f5\" />\n                    <Bar yAxisId=\"right\" dataKey=\"death_cases\" barSize={20} fill=\"rgb(169, 52, 57)\" />\n                    <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"confirmed_cases\" stroke=\"#ff7300\" />\n                    </ComposedChart>\n                </div>\n            </div>\n          );\n      }else{\n          return (\n              <div></div>\n          )\n      }\n    \n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n      covidPanel : state.covidReducer\n  }\n}\n\nconst mapDispatchToProps = {fetchCovidCountries,fetchCovidData};\n\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Dashboard));","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport {fetchCovidData} from '../actions/covidAction';\nimport DropdownComponent from './DropdownComponent';\nimport PictorialChartComponent  from './PictorialChartComponent';\n\nclass Dashboard extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n     }\n  }\n\n//   componentDidMount(){\n//     this.props.fetchCovidData();\n//   }\n\n  render(){\n    return (\n        <div>\n            <div className=\"covid-ui-card-contaniner\">\n                <DropdownComponent />\n                <PictorialChartComponent />\n          </div>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n      \n  }\n}\n\nconst mapDispatchToProps = {fetchCovidData};\n\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Dashboard));","import React, { Component } from 'react';\nimport CardComponent from './CardComponent';\n\nclass MainNavbar extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n     }\n  }\n\n \n  render(){\n    return (\n      <div id=\"mainnavbar\">\n        <div className=\"navbar-contaniner\" >\n          <div className=\"navbar-text center-all\">\n            Coronavirus COVID-19 Interactive Map of Global Cases\n          </div>\n        </div>\n        <CardComponent />\n      </div>\n    );\n  }\n}\n\n\n\n\nexport default (MainNavbar);","import React from 'react';\n\nexport default function Loader(_p) {\n   \n    return (\n        (_p && (_p.loading===true || _p.loading==='true')) ?\n        (<div>\n            <div className=\"visible-loader\">\n               \n            </div>\n        </div>) : null\n    )\n}","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport MainNavbar from './MainNavbar';\nimport Loader from './shared/Loader';\n\nclass Dashboard extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n     }\n  }\n\n  render(){\n    return (\n      <div className=\"main-body\">\n\n        <Loader loading={this.props.loading}/>\n        <MainNavbar />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n      loading: state.covidReducer.loading,\n  }\n}\n\nconst mapDispatchToProps = {};\n\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Dashboard));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/storeConfig\";\nimport Dashboard from './components/Dashboard';\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\n// include css\nimport './css/index.css';\n\n\n\nReactDOM.render(\n    \n    <Provider store={store}>\n        <BrowserRouter>\n            <Route exact path=\"/\" component={Dashboard} />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}